# Generated by Django 5.0 on 2023-12-09 17:36

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Laxout_Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution', models.CharField(default='', max_length=400)),
                ('name', models.CharField(default='', max_length=40)),
                ('dauer', models.IntegerField(default=30)),
                ('videoPath', models.CharField(default='', max_length=100)),
                ('looping', models.BooleanField(default=False)),
                ('added', models.BooleanField(default=False)),
                ('instruction', models.CharField(default='', max_length=200)),
                ('timer', models.BooleanField(default=False)),
                ('required', models.CharField(default='', max_length=50)),
                ('imagePath', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Physio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_uid', models.CharField(default='!;Z5x\\@3VmOJ2?ETp,kiP?v3X8*j3kz`FA#)<ccF8])3srm=}q(=GL##8?oMaK"3ON!)^\'D4T0[)@hf20,|SZ~k"kU#M#X`O/p%u', max_length=180, unique=True)),
                ('physio_field1', models.CharField(default='', max_length=100)),
                ('physio_field2', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LaxoutUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_uid', models.CharField(default='*omwezEB4XNOU-3~zOqV^5vu?{6Ra&3WOD&gG&x[el9":33P-qkRTbH0=S:qh-:)|\\&gvZFng$7*bs>bFeC5hhM[3A:hZ@{5ome^', max_length=180, unique=True)),
                ('laxout_user_name', models.CharField(default='', max_length=200)),
                ('laxout_credits', models.IntegerField(default=0)),
                ('note', models.CharField(default='', max_length=200)),
                ('creation_date', models.DateField(default=datetime.datetime(2023, 12, 9, 17, 36, 18, 301127, tzinfo=datetime.timezone.utc))),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exercises', models.ManyToManyField(to='laxout_app.laxout_exercise')),
            ],
        ),
    ]
